import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'miniMaxSum' function below.
     *
     * The function accepts INTEGER_ARRAY arr as parameter.
     */

    public static void miniMaxSum(List<Integer> arr) {
    // Write your code here

    int maxNum=Collections.max(arr);
    int minNum=Collections.min(arr);
    long maxSum=0,minSum=0;
    int f=0;

    for(Integer a:arr){
        minSum=minSum+a;
        maxSum=maxSum+a;

         if(a==minNum && f==0){
            
            minSum=minSum-maxNum;
            f=1;
            continue;
         }
        if(a==maxNum && f==0){
            
            maxSum=maxSum-minNum;
            f=1;
            continue;
        }
    }
    System.out.println(minSum+" "+maxSum);
    }
    

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));

        List<Integer> arr = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        Result.miniMaxSum(arr);

        bufferedReader.close();
    }
}
